// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RevenueSharingInvest.Data.Models.Entities;

namespace RevenueSharingInvest.Data.Migrations
{
    [DbContext(typeof(KrowdContext))]
    [Migration("20220914082812_Krowd_v1.0.5")]
    partial class Krowd_v105
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.AccountTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FromUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("ToUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FromUserId" }, "IX_AccountTransaction_FromUserId");

                    b.HasIndex(new[] { "ToUserId" }, "IX_AccountTransaction_ToUserId");

                    b.ToTable("AccountTransaction");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Business", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NumOfProject")
                        .HasColumnType("int");

                    b.Property<int?>("NumOfSuccessfulProject")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNum")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SuccessfulRate")
                        .HasColumnType("float");

                    b.Property<string>("TaxIdentificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Business");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.BusinessField", b =>
                {
                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("BusinessId", "FieldId");

                    b.HasIndex(new[] { "FieldId" }, "IX_BusinessField_FieldId");

                    b.ToTable("BusinessField");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Field");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Investment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("InvestorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastPayment")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("PackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "InvestorId" }, "IX_Investment_InvestorId");

                    b.HasIndex(new[] { "PackageId" }, "IX_Investment_PackageId");

                    b.HasIndex(new[] { "ProjectId" }, "IX_Investment_ProjectId");

                    b.ToTable("Investment");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Investor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("InvestorTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_Investor_UserId");

                    b.ToTable("Investor");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.InvestorType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("InvestorType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.InvestorWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("InvestorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("WalletTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "InvestorId" }, "IX_InvestorWallet_InvestorId");

                    b.HasIndex(new[] { "WalletTypeId" }, "IX_InvestorWallet_WalletTypeId");

                    b.ToTable("InvestorWallet");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Package", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RemainingQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProjectId" }, "IX_Package_ProjectId");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PackageVoucher", b =>
                {
                    b.Property<Guid>("PackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("PackageId", "VoucherId");

                    b.HasIndex(new[] { "VoucherId" }, "IX_PackageVoucher_VoucherId");

                    b.ToTable("PackageVoucher");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InvestmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PeriodRevenueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "InvestmentId" }, "IX_Payment_InvestmentId");

                    b.HasIndex(new[] { "PeriodRevenueId" }, "IX_Payment_PeriodRevenueId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PeriodRevenue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<double?>("ActualAmount")
                        .HasColumnType("float");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("NormalExpectedAmount")
                        .HasColumnType("float");

                    b.Property<double?>("NormalExpectedRatio")
                        .HasColumnType("float");

                    b.Property<double?>("OptimisticExpectedAmount")
                        .HasColumnType("float");

                    b.Property<double?>("OptimisticExpectedRatio")
                        .HasColumnType("float");

                    b.Property<double?>("PessimisticExpectedAmount")
                        .HasColumnType("float");

                    b.Property<double?>("PessimisticExpectedRatio")
                        .HasColumnType("float");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProjectId" }, "IX_PeriodRevenue_ProjectId");

                    b.HasIndex(new[] { "StageId" }, "IX_PeriodRevenue_StageId");

                    b.ToTable("PeriodRevenue");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PeriodRevenueHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("PeriodRevenueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PeriodRevenueId" }, "IX_PeriodRevenueHistory_PeriodRevenueId");

                    b.ToTable("PeriodRevenueHistory");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("AreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessLicense")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InvestedCapital")
                        .HasColumnType("float");

                    b.Property<double?>("InvestmentTargetCapital")
                        .HasColumnType("float");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Multiplier")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NumOfStage")
                        .HasColumnType("int");

                    b.Property<double?>("RemainAmount")
                        .HasColumnType("float");

                    b.Property<double?>("SharedRevenue")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AreaId" }, "IX_Project_AreaId");

                    b.HasIndex(new[] { "BusinessId" }, "IX_Project_BusinessId");

                    b.HasIndex(new[] { "ManagerId" }, "IX_Project_ManagerId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.ProjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProjectId" }, "IX_ProjectEntity_ProjectId");

                    b.ToTable("ProjectEntity");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.ProjectWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProjectManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("WalletTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProjectManagerId" }, "IX_ProjectWallet_ProjectId");

                    b.HasIndex(new[] { "WalletTypeId" }, "IX_ProjectWallet_WalletTypeId");

                    b.ToTable("ProjectWallet");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Risk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RiskTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProjectId" }, "IX_Risk_ProjectId");

                    b.HasIndex(new[] { "RiskTypeId" }, "IX_Risk_RiskTypeId");

                    b.ToTable("Risk");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.RiskType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("RiskType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Stage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProjectId" }, "IX_Stage_ProjectId");

                    b.ToTable("Stage");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.SystemWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("WalletTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "WalletTypeId" }, "IX_SystemWallet_WalletTypeId");

                    b.ToTable("SystemWallet");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BankName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DateOfBirth")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IdCard")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNum")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxIdentificationNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BusinessId" }, "IX_User_BusinessId");

                    b.HasIndex(new[] { "RoleId" }, "IX_User_RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProjectId" }, "IX_Voucher_ProjectId");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.VoucherItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("AvailableDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("InvestmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssuedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RedeemDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "InvestmentId" }, "IX_VoucherItem_InvestmentId");

                    b.HasIndex(new[] { "VoucherId" }, "IX_VoucherItem_VoucherId");

                    b.ToTable("VoucherItem");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.WalletTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Fee")
                        .HasColumnType("float");

                    b.Property<Guid?>("FromWalletId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InvestorWalletId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectWalletId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SystemWalletId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ToWalletId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "InvestorWalletId" }, "IX_WalletTransaction_InvestorWalletId");

                    b.HasIndex(new[] { "PaymentId" }, "IX_WalletTransaction_PaymentId");

                    b.HasIndex(new[] { "ProjectWalletId" }, "IX_WalletTransaction_ProjectWalletId");

                    b.HasIndex(new[] { "SystemWalletId" }, "IX_WalletTransaction_SystemWalletId");

                    b.ToTable("WalletTransaction");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.WalletType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("WalletType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.AccountTransaction", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.User", "FromUser")
                        .WithMany("AccountTransactionFromUsers")
                        .HasForeignKey("FromUserId")
                        .HasConstraintName("FK_AccountTransaction_User");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.User", "ToUser")
                        .WithMany("AccountTransactionToUsers")
                        .HasForeignKey("ToUserId")
                        .HasConstraintName("FK_AccountTransaction_User1");

                    b.Navigation("FromUser");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.BusinessField", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Business", "Business")
                        .WithMany("BusinessFields")
                        .HasForeignKey("BusinessId")
                        .HasConstraintName("FK_BusinessField_Business")
                        .IsRequired();

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Field", "Field")
                        .WithMany("BusinessFields")
                        .HasForeignKey("FieldId")
                        .HasConstraintName("FK_BusinessField_Field")
                        .IsRequired();

                    b.Navigation("Business");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Investment", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Investor", "Investor")
                        .WithMany("Investments")
                        .HasForeignKey("InvestorId")
                        .HasConstraintName("FK_Investment_Investor");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Package", "Package")
                        .WithMany("Investments")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("FK_Investment_Package");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("Investments")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Investment_Project");

                    b.Navigation("Investor");

                    b.Navigation("Package");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Investor", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.User", "User")
                        .WithMany("Investors")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.InvestorWallet", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Investor", "Investor")
                        .WithMany("InvestorWallets")
                        .HasForeignKey("InvestorId")
                        .HasConstraintName("FK_InvestorWallet_Investor");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.WalletType", "WalletType")
                        .WithMany("InvestorWallets")
                        .HasForeignKey("WalletTypeId")
                        .HasConstraintName("FK_InvestorWallet_WalletType");

                    b.Navigation("Investor");

                    b.Navigation("WalletType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Package", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("Packages")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Package_Project")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PackageVoucher", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Package", "Package")
                        .WithMany("PackageVouchers")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("FK_PackageVoucher_Package")
                        .IsRequired();

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Voucher", "Voucher")
                        .WithMany("PackageVouchers")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("FK_PackageVoucher_Voucher")
                        .IsRequired();

                    b.Navigation("Package");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Payment", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Investment", "Investment")
                        .WithMany("Payments")
                        .HasForeignKey("InvestmentId")
                        .HasConstraintName("FK_Payment_Investment");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.PeriodRevenue", "PeriodRevenue")
                        .WithMany("Payments")
                        .HasForeignKey("PeriodRevenueId")
                        .HasConstraintName("FK_Payment_PeriodRevenue");

                    b.Navigation("Investment");

                    b.Navigation("PeriodRevenue");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PeriodRevenue", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("PeriodRevenues")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_PeriodRevenue_Project")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Stage", "Stage")
                        .WithMany("PeriodRevenues")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PeriodRevenueHistory", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.PeriodRevenue", "PeriodRevenue")
                        .WithMany("PeriodRevenueHistories")
                        .HasForeignKey("PeriodRevenueId")
                        .HasConstraintName("FK_PeriodRevenueHistory_PeriodRevenue");

                    b.Navigation("PeriodRevenue");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Project", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Area", "Area")
                        .WithMany("Projects")
                        .HasForeignKey("AreaId")
                        .HasConstraintName("FK_Project_Area");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Business", "Business")
                        .WithMany("Projects")
                        .HasForeignKey("BusinessId")
                        .HasConstraintName("FK_Project_Business");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.User", "Manager")
                        .WithMany("Projects")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("FK_Project_User");

                    b.Navigation("Area");

                    b.Navigation("Business");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.ProjectEntity", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("ProjectEntities")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_ProjectUpdate_Project")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.ProjectWallet", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.User", "ProjectManager")
                        .WithMany("ProjectWallets")
                        .HasForeignKey("ProjectManagerId")
                        .HasConstraintName("FK_ProjectWallet_User");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.WalletType", "WalletType")
                        .WithMany("ProjectWallets")
                        .HasForeignKey("WalletTypeId")
                        .HasConstraintName("FK_BusinessWallet_WalletType");

                    b.Navigation("ProjectManager");

                    b.Navigation("WalletType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Risk", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("Risks")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Risk_Project");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.RiskType", "RiskType")
                        .WithMany("Risks")
                        .HasForeignKey("RiskTypeId")
                        .HasConstraintName("FK_Risk_RiskType");

                    b.Navigation("Project");

                    b.Navigation("RiskType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Stage", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("Stages")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Stage_Project")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.SystemWallet", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.WalletType", "WalletType")
                        .WithMany("SystemWallets")
                        .HasForeignKey("WalletTypeId")
                        .HasConstraintName("FK_SystemWallet_WalletType");

                    b.Navigation("WalletType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.User", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Business", "Business")
                        .WithMany("Users")
                        .HasForeignKey("BusinessId")
                        .HasConstraintName("FK_User_Business");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Business");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Voucher", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("Vouchers")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Voucher_Project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.VoucherItem", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Investment", "Investment")
                        .WithMany("VoucherItems")
                        .HasForeignKey("InvestmentId");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Voucher", "Voucher")
                        .WithMany("VoucherItems")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("FK_VoucherItem_Voucher");

                    b.Navigation("Investment");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.WalletTransaction", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.InvestorWallet", "InvestorWallet")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("InvestorWalletId")
                        .HasConstraintName("FK_Transaction_InvestorWallet");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Payment", "Payment")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK_Transaction_Payment");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.ProjectWallet", "ProjectWallet")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("ProjectWalletId")
                        .HasConstraintName("FK_Transaction_ProjectWallet");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.SystemWallet", "SystemWallet")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("SystemWalletId")
                        .HasConstraintName("FK_Transaction_SystemWallet");

                    b.Navigation("InvestorWallet");

                    b.Navigation("Payment");

                    b.Navigation("ProjectWallet");

                    b.Navigation("SystemWallet");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Area", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Business", b =>
                {
                    b.Navigation("BusinessFields");

                    b.Navigation("Projects");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Field", b =>
                {
                    b.Navigation("BusinessFields");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Investment", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("VoucherItems");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Investor", b =>
                {
                    b.Navigation("Investments");

                    b.Navigation("InvestorWallets");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.InvestorWallet", b =>
                {
                    b.Navigation("WalletTransactions");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Package", b =>
                {
                    b.Navigation("Investments");

                    b.Navigation("PackageVouchers");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Payment", b =>
                {
                    b.Navigation("WalletTransactions");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PeriodRevenue", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("PeriodRevenueHistories");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Project", b =>
                {
                    b.Navigation("Investments");

                    b.Navigation("Packages");

                    b.Navigation("PeriodRevenues");

                    b.Navigation("ProjectEntities");

                    b.Navigation("Risks");

                    b.Navigation("Stages");

                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.ProjectWallet", b =>
                {
                    b.Navigation("WalletTransactions");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.RiskType", b =>
                {
                    b.Navigation("Risks");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Stage", b =>
                {
                    b.Navigation("PeriodRevenues");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.SystemWallet", b =>
                {
                    b.Navigation("WalletTransactions");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.User", b =>
                {
                    b.Navigation("AccountTransactionFromUsers");

                    b.Navigation("AccountTransactionToUsers");

                    b.Navigation("Investors");

                    b.Navigation("Projects");

                    b.Navigation("ProjectWallets");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Voucher", b =>
                {
                    b.Navigation("PackageVouchers");

                    b.Navigation("VoucherItems");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.WalletType", b =>
                {
                    b.Navigation("InvestorWallets");

                    b.Navigation("ProjectWallets");

                    b.Navigation("SystemWallets");
                });
#pragma warning restore 612, 618
        }
    }
}

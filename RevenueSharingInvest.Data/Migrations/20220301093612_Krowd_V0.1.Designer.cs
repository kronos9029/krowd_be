// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RevenueSharingInvest.Data.Helpers;

namespace RevenueSharingInvest.Data.Migrations
{
    [DbContext(typeof(KrowdContext))]
    [Migration("20220301093612_Krowd_V0.1")]
    partial class Krowd_V01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Area", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("district");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.Property<string>("Ward")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ward");

                    b.HasKey("Id");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Business", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Bank")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bank");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("bankAccount");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("NumOfProject")
                        .HasColumnType("int")
                        .HasColumnName("numOfProject");

                    b.Property<int?>("NumOfSuccessfulProject")
                        .HasColumnType("int")
                        .HasColumnName("numOfSuccessfulProject");

                    b.Property<string>("PhoneNum")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("phoneNum");

                    b.Property<double?>("SuccessfulRate")
                        .HasColumnType("float")
                        .HasColumnName("successfulRate");

                    b.Property<string>("TaxIdentificationNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("taxIdentificationNumber");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.ToTable("Business");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.BusinessField", b =>
                {
                    b.Property<string>("BusinessId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("businessID");

                    b.Property<string>("FieldId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("fieldID");

                    b.HasKey("BusinessId", "FieldId");

                    b.HasIndex("FieldId");

                    b.ToTable("BusinessField");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.BusinessWallet", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<double?>("Balance")
                        .HasColumnType("float")
                        .HasColumnName("balance");

                    b.Property<string>("BusinessId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("businessID");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.Property<string>("WalletTypeId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("walletTypeID");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("WalletTypeId");

                    b.ToTable("BusinessWallet");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Field", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.ToTable("Field");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Investment", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("InvestorId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("investorID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<DateTime?>("LastPayment")
                        .HasColumnType("datetime")
                        .HasColumnName("lastPayment");

                    b.Property<string>("PackageId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("packageID");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("projectID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float")
                        .HasColumnName("totalPrice");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("InvestorId");

                    b.HasIndex("PackageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Investment");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Investor", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Bank")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bank");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("bankAccount");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("DateOfBirth")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("firstName");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender");

                    b.Property<string>("Idcard")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IDCard");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<string>("InvestorTypeId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("investorTypeID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("lastName");

                    b.Property<string>("PhoneNum")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("phoneNum");

                    b.Property<string>("TaxIdentificationNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("taxIdentificationNumber");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.Property<string>("UserId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("userID");

                    b.HasKey("Id");

                    b.HasIndex("InvestorTypeId");

                    b.ToTable("Investor");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.InvestorLocation", b =>
                {
                    b.Property<string>("InvestorId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("investorID");

                    b.Property<string>("AreaId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("areaID");

                    b.HasKey("InvestorId", "AreaId");

                    b.HasIndex("AreaId");

                    b.ToTable("InvestorLocation");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.InvestorType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.ToTable("InvestorType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.InvestorWallet", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<double?>("Balance")
                        .HasColumnType("float")
                        .HasColumnName("balance");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("InvestorId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("investorID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("UpDateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("upDateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.Property<string>("WalletTypeId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("walletTypeID");

                    b.HasKey("Id");

                    b.HasIndex("InvestorId");

                    b.HasIndex("WalletTypeId");

                    b.ToTable("InvestorWallet");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Package", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("approvedBy");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("approvedDate");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("closeDate");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<int?>("MaxForPurchasing")
                        .HasColumnType("int")
                        .HasColumnName("maxForPurchasing");

                    b.Property<int?>("MinForPurchasing")
                        .HasColumnType("int")
                        .HasColumnName("minForPurchasing");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime")
                        .HasColumnName("openDate");

                    b.Property<double?>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("projectID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PackageVoucher", b =>
                {
                    b.Property<string>("PackageId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("packageID");

                    b.Property<string>("VoucherId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("voucherID");

                    b.Property<int>("MaxQuantity")
                        .HasColumnType("int")
                        .HasColumnName("maxQuantity");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("PackageId", "VoucherId");

                    b.HasIndex("VoucherId");

                    b.ToTable("PackageVoucher");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Payment", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("FromId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("fromID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("PeriodRevenueId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("periodRevenueID");

                    b.Property<string>("ToId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("toID");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("PeriodRevenueId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PeriodRevenue", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<int?>("PeriodNum")
                        .HasColumnType("int")
                        .HasColumnName("periodNum");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("projectID");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("PeriodRevenue");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PeriodRevenueHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("PeriodRevenueId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("periodRevenueID");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("PeriodRevenueId");

                    b.ToTable("PeriodRevenueHistory");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Project", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("approvedBy");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("approvedDate");

                    b.Property<string>("AreaId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("areaID");

                    b.Property<string>("BusinessId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("businessID");

                    b.Property<string>("BusinessLicense")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("businessLicense");

                    b.Property<string>("Category")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("category");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("endDate");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<double?>("InvestedCapital")
                        .HasColumnType("float")
                        .HasColumnName("investedCapital");

                    b.Property<double?>("InvestmentTargetCapital")
                        .HasColumnType("float")
                        .HasColumnName("investmentTargetCapital");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<double?>("MinInvestmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("minInvestmentAmount");

                    b.Property<double?>("Multiplier")
                        .HasColumnType("float")
                        .HasColumnName("multiplier");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("NumOfPeriod")
                        .HasColumnType("int")
                        .HasColumnName("numOfPeriod");

                    b.Property<double?>("SharedRevenue")
                        .HasColumnType("float")
                        .HasColumnName("sharedRevenue");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("startDate");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("BusinessId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.ProjectHighlight", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("projectID");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectHighlight");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.ProjectUpdate", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("projectID");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectUpdate");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Risk", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("projectID");

                    b.Property<string>("RiskTypeId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("riskTypeID");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RiskTypeId");

                    b.ToTable("Risk");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.RiskType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.ToTable("RiskType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Stage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<int?>("CloseMonth")
                        .HasColumnType("int")
                        .HasColumnName("closeMonth");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("OpenMonth")
                        .HasColumnType("int")
                        .HasColumnName("openMonth");

                    b.Property<double?>("Percents")
                        .HasColumnType("float")
                        .HasColumnName("percents");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("projectID");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Stage");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.SystemWallet", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<double?>("Balance")
                        .HasColumnType("float")
                        .HasColumnName("balance");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.Property<string>("WalletTypeId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("walletTypeID");

                    b.HasKey("Id");

                    b.HasIndex("WalletTypeId");

                    b.ToTable("SystemWallet");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<double?>("Fee")
                        .HasColumnType("float")
                        .HasColumnName("fee");

                    b.Property<string>("FromWalletId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("fromWalletID");

                    b.Property<string>("InvestmentId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("investmentID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("PaymentId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("paymentID");

                    b.Property<string>("ToWalletId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("toWalletID");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("InvestmentId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("BusinessId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("businessID");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("InvestorId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("investorID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("RoleId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("roleID");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.Property<string>("provider")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("provider");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Voucher", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateBy")
                        .HasColumnType("datetime")
                        .HasColumnName("createBy");

                    b.Property<string>("CreateDate")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("endDate");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("projectID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("startDate");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdateBy")
                        .HasColumnType("datetime")
                        .HasColumnName("updateBy");

                    b.Property<string>("UpdateDate")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.VoucherItem", b =>
                {
                    b.Property<string>("InvestorId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("investorID");

                    b.Property<string>("VoucherId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("voucherId");

                    b.Property<DateTime?>("AvailableDate")
                        .HasColumnType("datetime")
                        .HasColumnName("availableDate");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime")
                        .HasColumnName("expireDate");

                    b.Property<string>("InvestmentId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("investmentID");

                    b.Property<DateTime?>("IssuedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("issuedDate");

                    b.Property<DateTime?>("RedeemDate")
                        .HasColumnType("datetime")
                        .HasColumnName("redeemDate");

                    b.HasKey("InvestorId", "VoucherId");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherItem");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.WalletType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("WalletType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.BusinessField", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Business", "Business")
                        .WithMany("BusinessFields")
                        .HasForeignKey("BusinessId")
                        .HasConstraintName("FK_BusinessField_Business")
                        .IsRequired();

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Field", "Field")
                        .WithMany("BusinessFields")
                        .HasForeignKey("FieldId")
                        .HasConstraintName("FK_BusinessField_Field")
                        .IsRequired();

                    b.Navigation("Business");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.BusinessWallet", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Business", "Business")
                        .WithMany("BusinessWallets")
                        .HasForeignKey("BusinessId")
                        .HasConstraintName("FK_BusinessWallet_Business");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.WalletType", "WalletType")
                        .WithMany("BusinessWallets")
                        .HasForeignKey("WalletTypeId")
                        .HasConstraintName("FK_BusinessWallet_WalletType");

                    b.Navigation("Business");

                    b.Navigation("WalletType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Investment", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Investor", "Investor")
                        .WithMany("Investments")
                        .HasForeignKey("InvestorId")
                        .HasConstraintName("FK_Investment_Investor");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Package", "Package")
                        .WithMany("Investments")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("FK_Investment_Package");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("Investments")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Investment_Project");

                    b.Navigation("Investor");

                    b.Navigation("Package");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Investor", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.InvestorType", "InvestorType")
                        .WithMany("Investors")
                        .HasForeignKey("InvestorTypeId")
                        .HasConstraintName("FK_Investor_InvestorType");

                    b.Navigation("InvestorType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.InvestorLocation", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Area", "Area")
                        .WithMany("InvestorLocations")
                        .HasForeignKey("AreaId")
                        .HasConstraintName("FK_InvestorLocation_Area")
                        .IsRequired();

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Investor", "Investor")
                        .WithMany("InvestorLocations")
                        .HasForeignKey("InvestorId")
                        .HasConstraintName("FK_InvestorLocation_Investor")
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Investor");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.InvestorWallet", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Investor", "Investor")
                        .WithMany("InvestorWallets")
                        .HasForeignKey("InvestorId")
                        .HasConstraintName("FK_InvestorWallet_Investor");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.WalletType", "WalletType")
                        .WithMany("InvestorWallets")
                        .HasForeignKey("WalletTypeId")
                        .HasConstraintName("FK_InvestorWallet_WalletType");

                    b.Navigation("Investor");

                    b.Navigation("WalletType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Package", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("Packages")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Package_Project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PackageVoucher", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Package", "Package")
                        .WithMany("PackageVouchers")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("FK_PackageVoucher_Package")
                        .IsRequired();

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Voucher", "Voucher")
                        .WithMany("PackageVouchers")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("FK_PackageVoucher_Voucher")
                        .IsRequired();

                    b.Navigation("Package");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Payment", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.PeriodRevenue", "PeriodRevenue")
                        .WithMany("Payments")
                        .HasForeignKey("PeriodRevenueId")
                        .HasConstraintName("FK_Payment_PeriodRevenue");

                    b.Navigation("PeriodRevenue");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PeriodRevenue", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("PeriodRevenues")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_PeriodRevenue_Project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PeriodRevenueHistory", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.PeriodRevenue", "PeriodRevenue")
                        .WithMany("PeriodRevenueHistories")
                        .HasForeignKey("PeriodRevenueId")
                        .HasConstraintName("FK_PeriodRevenueHistory_PeriodRevenue");

                    b.Navigation("PeriodRevenue");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Project", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Area", "Area")
                        .WithMany("Projects")
                        .HasForeignKey("AreaId")
                        .HasConstraintName("FK_Project_Area");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Business", "Business")
                        .WithMany("Projects")
                        .HasForeignKey("BusinessId")
                        .HasConstraintName("FK_Project_Business");

                    b.Navigation("Area");

                    b.Navigation("Business");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.ProjectHighlight", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("ProjectHighlights")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_ProjectHighlight_Project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.ProjectUpdate", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("ProjectUpdates")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_ProjectUpdate_Project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Risk", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("Risks")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Risk_Project");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.RiskType", "RiskType")
                        .WithMany("Risks")
                        .HasForeignKey("RiskTypeId")
                        .HasConstraintName("FK_Risk_RiskType");

                    b.Navigation("Project");

                    b.Navigation("RiskType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Stage", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("Stages")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Stage_Project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.SystemWallet", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.WalletType", "WalletType")
                        .WithMany("SystemWallets")
                        .HasForeignKey("WalletTypeId")
                        .HasConstraintName("FK_SystemWallet_WalletType");

                    b.Navigation("WalletType");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Transaction", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Investment", "Investment")
                        .WithMany("Transactions")
                        .HasForeignKey("InvestmentId")
                        .HasConstraintName("FK_Transaction_Investment");

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Payment", "Payment")
                        .WithMany("Transactions")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK_Transaction_Payment");

                    b.Navigation("Investment");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.User", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Voucher", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Project", "Project")
                        .WithMany("Vouchers")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Voucher_Project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.VoucherItem", b =>
                {
                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Investor", "Investor")
                        .WithMany("VoucherItems")
                        .HasForeignKey("InvestorId")
                        .HasConstraintName("FK_VoucherItem_Investor")
                        .IsRequired();

                    b.HasOne("RevenueSharingInvest.Data.Models.Entities.Voucher", "Voucher")
                        .WithMany("VoucherItems")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("FK_VoucherItem_Voucher")
                        .IsRequired();

                    b.Navigation("Investor");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Area", b =>
                {
                    b.Navigation("InvestorLocations");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Business", b =>
                {
                    b.Navigation("BusinessFields");

                    b.Navigation("BusinessWallets");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Field", b =>
                {
                    b.Navigation("BusinessFields");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Investment", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Investor", b =>
                {
                    b.Navigation("Investments");

                    b.Navigation("InvestorLocations");

                    b.Navigation("InvestorWallets");

                    b.Navigation("VoucherItems");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.InvestorType", b =>
                {
                    b.Navigation("Investors");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Package", b =>
                {
                    b.Navigation("Investments");

                    b.Navigation("PackageVouchers");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Payment", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.PeriodRevenue", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("PeriodRevenueHistories");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Project", b =>
                {
                    b.Navigation("Investments");

                    b.Navigation("Packages");

                    b.Navigation("PeriodRevenues");

                    b.Navigation("ProjectHighlights");

                    b.Navigation("ProjectUpdates");

                    b.Navigation("Risks");

                    b.Navigation("Stages");

                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.RiskType", b =>
                {
                    b.Navigation("Risks");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.Voucher", b =>
                {
                    b.Navigation("PackageVouchers");

                    b.Navigation("VoucherItems");
                });

            modelBuilder.Entity("RevenueSharingInvest.Data.Models.Entities.WalletType", b =>
                {
                    b.Navigation("BusinessWallets");

                    b.Navigation("InvestorWallets");

                    b.Navigation("SystemWallets");
                });
#pragma warning restore 612, 618
        }
    }
}
